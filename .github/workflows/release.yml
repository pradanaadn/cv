name: Create releases for specific tags

on:
  push:
    tags:
      - 'v-ds-*'
      - 'v-*'

permissions:
  contents: write

jobs:
  release:
    name: Create releases for matching tags
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for better tag handling

      - name: Extract tag name
        id: extract_tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          # Extract version without 'v-' prefix for title
          VERSION=${TAG_NAME#v-}
          VERSION=${VERSION#ds-}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Read and sanitize release note
        id: release_note
        run: |
          CV_PATH="rendercv_output/Putu_Gede_Pradana_Adnyana_CV.md"
          if [ -f "$CV_PATH" ]; then
            CONTENT=$(cat "$CV_PATH")
            # Escape newlines and quotes for JSON
            SANITIZED=$(echo "$CONTENT" | jq -Rsa .)
            echo "note=$SANITIZED" >> $GITHUB_OUTPUT
            echo "has_notes=true" >> $GITHUB_OUTPUT
          else
            DEFAULT_NOTE="Release ${TAG_NAME}

            This is an automated release created from tag ${TAG_NAME}."
            SANITIZED=$(echo "$DEFAULT_NOTE" | jq -Rsa .)
            echo "note=$SANITIZED" >> $GITHUB_OUTPUT
            echo "has_notes=false" >> $GITHUB_OUTPUT
          fi

      - name: Verify PDF exists
        id: check_pdf
        run: |
          PDF_PATH="rendercv_output/Putu_Gede_Pradana_Adnyana_CV.pdf"
          if [ -f "$PDF_PATH" ]; then
            echo "pdf_exists=true" >> $GITHUB_OUTPUT
          else
            echo "pdf_exists=false" >> $GITHUB_OUTPUT
            echo "::warning::PDF file not found at $PDF_PATH"
          fi

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_CMD="gh release create \"${{ steps.extract_tag.outputs.tag_name }}\" \
            --repo=\"${GITHUB_REPOSITORY}\" \
            --title=\"Version ${{ steps.extract_tag.outputs.version }}\" \
            --notes=\"${{ steps.release_note.outputs.note }}\""
          
          if [ "${{ steps.check_pdf.outputs.pdf_exists }}" = "true" ]; then
            RELEASE_CMD="$RELEASE_CMD ./rendercv_output/Putu_Gede_Pradana_Adnyana_CV.pdf"
          fi
          
          eval "$RELEASE_CMD"